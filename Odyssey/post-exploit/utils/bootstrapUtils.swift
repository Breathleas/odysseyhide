//
//  bootstrapUtils.swift
//  Odyssey
//
//  Created by CoolStar on 5/13/20.
//  Copyright Â© 2020 coolstar. All rights reserved.
//

import Foundation

func testUnsandboxedExec() -> Int32 {
    let args = ["helloWorld"]
    let argv: [UnsafeMutablePointer<CChar>?] = args.map { $0.withCString(strdup) }
    defer { for case let arg? in argv { free(arg) } }
    
    var pid = pid_t(0)
    var status = posix_spawn(&pid, "/private/var/containers/Bundle/odyssey/jbexec", nil, nil, argv + [nil], environ)
    if status == 0 {
        if waitpid(pid, &status, 0) == -1 {
            perror("waitpid")
        }
    }
    return status
}

func runUnsandboxed(cmd: String) -> Int32 {
    let args = ["/private/var/containers/Bundle/odyssey/sh", "-c", cmd]
    let argv: [UnsafeMutablePointer<CChar>?] = args.map { $0.withCString(strdup) }
    defer { for case let arg? in argv { free(arg) } }
    
    var pid = pid_t(0)
    var status = posix_spawn(&pid, "/private/var/containers/Bundle/odyssey/jbexec", nil, nil, argv + [nil], environ)
    if status == 0 {
        if waitpid(pid, &status, 0) == -1 {
            perror("waitpid")
        }
    } else {
        print("posix_spawn:", status)
    }
    return status
}
